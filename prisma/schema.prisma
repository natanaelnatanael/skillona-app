generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum JobStatus {
  queued
  processing
  done
  failed
}

model User {
  id             String          @id @default(cuid())
  clerkId        String          @unique
  email          String          @unique
  plan           String          @default("free") // free | basic | pro
  createdAt      DateTime        @default(now())

  jobs           Job[]
  stripeCustomer StripeCustomer?
  subscriptions  Subscription[]
}

model Job {
  id         String    @id @default(cuid())
  user       User      @relation(fields: [userId], references: [id])
  userId     String
  status     JobStatus @default(queued)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model StripeCustomer {
  id         String   @id @default(cuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @unique
  stripeId   String   @unique
  createdAt  DateTime @default(now())
}

model Subscription {
  id           String   @id @default(cuid())
  user         User     @relation(fields: [userId], references: [id])
  userId       String
  stripeSubId  String   @unique
  plan         String
  status       String
  currentPeriodStart DateTime
  currentPeriodEnd   DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([userId])
}

model WebhookEvent {
  id        String   @id @default(cuid())
  type      String
  payload   Json
  createdAt DateTime @default(now())
}


